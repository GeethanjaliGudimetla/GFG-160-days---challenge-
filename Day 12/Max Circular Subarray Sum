
class Solution {

    // a: input array
    // n: size of array
    // Function to find maximum circular subarray sum.
    public int circularSubarraySum(int arr[]) {

        // Your code here
        int n=arr.length;
        int max_kadane=kadane(arr);
        int totalSum=0;
        for(int i=0;i<n;i++){
            totalSum+=arr[i];
            arr[i]=-arr[i];
        }
        int max_inverse_kadane=kadane(arr);
        int max_circular=totalSum+max_inverse_kadane;
        if(max_circular==0){
            return max_kadane;
        }
        return Math.max(max_kadane,max_circular);
    }
    private int kadane(int[] arr){
        int n=arr.length;
        int max_ending_here=arr[0];
        int max_so_far=arr[0];
        for(int i=1;i<n;i++){
            max_ending_here=Math.max(arr[i],max_ending_here+arr[i]);
            max_so_far=Math.max(max_so_far,max_ending_here);
        }
        return max_so_far;
    }
}
